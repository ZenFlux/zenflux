name: React packages workflow

on:
  workflow_call:
    inputs:
      runs-on:
        type: string
        required: true
    secrets:
      token:
        required: true

jobs:
  build:
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run @z-flux:react:build:ci

      - name: Compress build artifacts
        run: |
          mkdir -p build-artifacts
          find packages-react -type f -path "*/dist/**" | cpio -pdm build-artifacts
          tar -czvf build-artifacts.tar.gz -C build-artifacts .

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build-artifacts.tar.gz

  lint:
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: 10
    needs: build

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Extract build artifacts
        run: tar -xzf build-artifacts.tar.gz

      - name: Restore ESLint cache
        id: restore-eslint-cache
        uses: actions/cache@v3
        with:
          path: .eslintcache
          key: eslint-cache-${{ runner.os }}-${{ hashFiles('bun.lock', 'eslint.confg.js', '.eslintignore') }}
          restore-keys: |
            eslint-cache-${{ runner.os }}-

      - name: Run ESLint
        run: bun run @z-flux:react:eslint:ci

      - name: Save ESLint cache
        if: steps.restore-eslint-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: .eslintcache
          key: eslint-cache-${{ runner.os }}-${{ hashFiles('bun.lock', 'eslint.confg.js', '.eslintignore') }}

  test:
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: 10
    needs: build

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Extract build artifacts
        run: tar -xzf build-artifacts.tar.gz

      - name: Run tests
        run: bun run @z-flux:react:test:ci
